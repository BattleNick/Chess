{"version":3,"sources":["webpack:///./config/Store.js","webpack:///./index.js","webpack:///./config/Root.js","webpack:///./sagas/index.js","webpack:///./api/Data.js","webpack:///./api/Api.js","webpack:///./config/Constants.js","webpack:///./reducers/index.js","webpack:///./reducers/Data.js","webpack:///./containers/App.js","webpack:///./containers/DeskCell.js"],"names":["__webpack_require__","_reactRouterRedux","_redux","history","_createBrowserHistory2","default","sagaMiddleware","_reduxSaga2","middlewares","routerMiddleware","push","_reduxLogger2","store","createStore","_reducers2","applyMiddleware","apply","undefined","run","_sagas2","action","type","payload","dispatch","_reactDom2","render","_react2","createElement","_Root2","document","getElementById","_reactRouterDom","_reactHotLoader","_reactRedux","_Store","Root","Provider","ConnectedRouter","Route","path","component","_App2","hot","module","fetchNumber","watchAsync","rootSaga","_effects","_Data","api","res","regeneratorRuntime","wrap","_context","prev","next","put","_Data2","call","fetch","sent","t0","stop","_marked","this","_context2","take","_marked2","_context3","all","_marked3","_Api2","Data","_classCallCheck","_this","_possibleConstructorReturn","__proto__","Object","getPrototypeOf","bind","data","_this2","Promise","resolve","_axios","_Constants","Api","axios","_axios2","create","baseURL","_Constants2","Constants","combineReducers","Router","state","arguments","length","fetching","failed","fetched","_extends","_react","_propTypes","_DeskCell","elementPoints","App","props","ChessPositions","rowsPositionsLiterals","deskTableWidth","deskTable","offsetWidth","i","j","top","left","console","log","persons","window","addEventListener","get","then","setState","_this3","rows","key","_DeskCell2","Fragment","map","person","name","className","value","idx","ref","div","propTypes","_propTypes2","string","defaultProps","connect","DeskCell"],"mappings":"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","file":"app.js","sourcesContent":["import createBrowserHistory from 'history/createBrowserHistory';\nimport { routerMiddleware } from 'react-router-redux';\nimport logger from 'redux-logger';\nimport { createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from '../sagas';\nimport reducers from '../reducers';\n\n// Create a history\nconst history = createBrowserHistory();\n\n// Create middlewares\nconst sagaMiddleware = typeof createSagaMiddleware === 'function'\n    ? createSagaMiddleware()\n    : createSagaMiddleware.default();\nconst middlewares = [\n    routerMiddleware(history),\n    sagaMiddleware,\n];\n\nif (process.env.NODE_ENV !== 'production') {\n    middlewares.push(logger);\n}\n\n// Create store\nconst store = createStore(\n    reducers,\n    applyMiddleware(...middlewares),\n);\n\nsagaMiddleware.run(rootSaga);\n\nif (module.hot) {\n    // Enable Webpack hot module replacement for reducers\n    module.hot.accept('../reducers', () => {\n        const nextRootReducer = require('../reducers/index');\n        store.replaceReducer(nextRootReducer);\n    });\n}\n\nconst action = (type, payload) => store.dispatch({ type, payload });\n\n// Export history and store\nexport { history, store, action };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Root from './config/Root';\n\nReactDOM.render(<Root />, document.getElementById('root'));\n","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport { hot } from 'react-hot-loader';\nimport { Provider } from 'react-redux';\nimport { ConnectedRouter } from 'react-router-redux';\nimport { store, history } from './Store';\nimport App from '../containers/App';\n\nconst Root = () => {\n    return (\n        <Provider store={store}>\n            <ConnectedRouter history={history}>\n                <div>\n                    <Route path=\"/\" component={App} />\n                </div>\n            </ConnectedRouter>\n        </Provider>\n    );\n};\n\nexport default hot(module)(Root);\n","import {\n    put,\n    take,\n    all,\n    call,\n} from 'redux-saga/effects';\nimport Data from '../api/Data';\n\nexport function* fetchNumber() {\n    try {\n        yield put({\n            type: 'FETCH_DATA',\n        });\n        const api = new Data();\n        const res = yield call(api.fetch);\n\n        yield put({\n            type: 'FETCHED_DATA',\n            payload: res,\n        });\n    } catch (e) {\n        yield put({\n            type: 'FETCH_DATA_FAILED',\n        });\n    }\n}\n\nexport function* watchAsync() {\n    yield take('FETCH_DATA');\n    yield call(fetchNumber);\n}\n\nexport default function* rootSaga() {\n    yield all([\n        watchAsync(),\n    ]);\n}\n","import Api from './Api';\n\nexport default class Data extends Api {\n    constructor() {\n        super();\n\n        this.fetch = this.fetch.bind(this);\n\n        this.data = 'Hello World.';\n    }\n\n    fetch () {\n        return new Promise(resolve => resolve({ data: this.data }));\n    }\n}\n","import axios from 'axios';\nimport Constants from '../config/Constants';\n\nexport default class Api {\n    constructor () {\n        this.axios = axios.create({\n            baseURL: Constants.baseURL,\n        });\n    }\n}\n","const Constants = {\n    baseURL: 'http://api.dev',\n};\n\nexport default Constants;\n","import { combineReducers } from 'redux';\nimport { routerReducer as Router } from 'react-router-redux';\nimport Data from './Data';\n\nexport default combineReducers({\n    Router,\n    Data,\n});\n","export default function Data(state = {\n    fetching: false,\n    data: null,\n    failed: false,\n    fetched: false,\n}, action) {\n    switch (action.type) {\n        case 'FETCHED_DATA':\n            return {\n                ...state,\n                fetching: false,\n                failed: false,\n                data: action.payload.data,\n            };\n        case 'FETCHING_DATA':\n            return {\n                ...state,\n                fetching: true,\n                failed: false,\n            };\n        case 'FETCH_DATA_FAILED':\n            return {\n                ...state,\n                fetching: false,\n                fetched: false,\n                failed: true,\n            };\n        default:\n            return state;\n    }\n}\n","import React, { PureComponent, Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { action } from 'App/config/Store';\r\nimport axios from 'axios';\r\nimport DeskCell from './DeskCell';\r\n\r\nconst elementPoints = {};\r\n\r\nclass App extends PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            persons: [],\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        action('FETCH_DATA');\r\n        this.ChessPositions();\r\n        if (typeof window !== 'undefined') {\r\n            window.addEventListener('resize', this.ChessPositions);\r\n        }\r\n        const ax = axios.create({\r\n            baseURL: 'http://http://localhost:8080/JsonData/',\r\n        })\r\n        ax.get('Chess.json')\r\n            .then((res) => {\r\n                const persons = res.data;\r\n                this.setState({ persons });\r\n            });\r\n    }\r\n\r\n    ChessPositions = () => {\r\n        const rowsPositionsLiterals = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H'];\r\n        const deskTableWidth = this.deskTable.offsetWidth;\r\n        for (let i = 0; i < rowsPositionsLiterals.length; i += 1) {\r\n            for (let j = 0; j < rowsPositionsLiterals.length; j += 1) {\r\n                elementPoints[rowsPositionsLiterals[i] + (j + 1)] = { top: `${deskTableWidth / 8 * j}px`, left: `${deskTableWidth / 8 * j}px` };\r\n            }\r\n        }\r\n        console.log(elementPoints);\r\n    }\r\n\r\n    render() {\r\n        const { data } = this.props;\r\n        const rows = [];\r\n        const rowsPositionsLiterals = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H'];\r\n        for (let i = 0; i < 8; i += 1) {\r\n            rows.push(<ul key={i}><li /><li /><li /><li /><li /><li /><li /><li /></ul>);\r\n        }\r\n        console.log('--------');\r\n        console.log(data);\r\n        console.log('--------');\r\n        console.log(<DeskCell />);\r\n        const { persons } = this.state;\r\n        // const elements = rowsPositionsLiterals.map((value, idx) => {\r\n        //     return (\r\n        //         <ul key={idx}>\r\n        //             {\r\n        //                 rowsPositionsLiterals.map((valueCell, idxCell) => {\r\n        //                     return <li className={value + (idxCell + 1)} key={idxCell} />;\r\n        //                 })\r\n        //             }\r\n        //         </ul>\r\n        //     );\r\n        // });\r\n        return (\r\n            <Fragment>\r\n                <ul>\r\n                    { persons.map(person => <li>{person.name}</li>)}\r\n                </ul>\r\n                <div className=\"chess_desck_wrapper\">\r\n                    <div className=\"chess_desk\">\r\n                        <div className=\"desk_literals\">\r\n                            <ul>\r\n                                <li />\r\n                                {rowsPositionsLiterals.map((value, idx) => {\r\n                                    return <li key={idx}>{value}</li>;\r\n                                })}\r\n                                <li />\r\n                            </ul>\r\n                        </div>\r\n                        <div className=\"desk_center\">\r\n                            <div className=\"desk_numbers\">\r\n                                <ul>\r\n                                    {rowsPositionsLiterals.map((value, idx) => {\r\n                                        return <li key={idx}>{idx + 1}</li>;\r\n                                    })}\r\n                                </ul>\r\n                            </div>\r\n                            <div\r\n                                className=\"desk_table\"\r\n                                ref={(div) => {\r\n                                    this.deskTable = div\r\n                                }}\r\n                            >\r\n                                {rows}\r\n                            </div>\r\n                            {/* <div className=\"desk_table_positions\">\r\n                                {elements}\r\n                            </div> */}\r\n                            <div className=\"desk_numbers\">\r\n                                <ul>\r\n                                    {rowsPositionsLiterals.map((value, idx) => {\r\n                                        return <li key={idx}>{idx + 1}</li>;\r\n                                    })}\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"desk_literals\">\r\n                            <ul>\r\n                                <li />\r\n                                {rowsPositionsLiterals.map((value, idx) => {\r\n                                    return <li key={idx}>{value}</li>;\r\n                                })}\r\n                                <li />\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nApp.propTypes = {\r\n    data: PropTypes.string,\r\n};\r\n\r\nApp.defaultProps = {\r\n    data: '',\r\n};\r\n\r\nexport default connect(store => ({\r\n    data: store.Data.data,\r\n}))(App);\r\n","import React, { PureComponent, Fragment } from 'react';\r\n\r\nclass DeskCell extends PureComponent {\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <p>lflflf</p>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DeskCell;\r\n"],"sourceRoot":""}